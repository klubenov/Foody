@using System.Globalization
@using System.Text
@using Microsoft.CodeAnalysis.CSharp.Syntax
@model Foody.Services.Models.Diary.AddMealBindingModel
@{
    ViewData["Title"] = "Add Meal";
}

<h2 class="text-center">Add Meal</h2>

<div class="col-md-offset-1 col-md-10">
    <form method="post" asp-action="AddMeal" asp-controller="Diary">
        <hr class="hr-2" />
        <div asp-validation-summary="All" class="text-danger"></div>
        <div class="row">
            <div class="form-group text-center col-md-2">
                <label asp-for="Location" ></label>
                <input asp-for="Location" class="form-control col-md-9" placeholder="Choose name..." />
                <span asp-validation-for="Location" class="text-danger"></span>
            </div>
            <div class="form-group text-center col-md-6">
                <label asp-for="Note" ></label>
                <input type="text" asp-for="Note" class="form-control" placeholder="Leave note here (optional)" />
                <span asp-validation-for="Note" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4">
                <label asp-for="TimeOfConsumption" class="text-center">Time eaten:</label>
                <div class='input-group date' id='timeOfConsumptionPicker'>
                    <input name="TimeOfConsumption" type="text" class="form-control" placeholder="Time of consumption..." value="@DateTime.Now.ToString()"/>
                    <span asp-validation-for="TimeOfConsumption" class="text-danger"></span>
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
        </div>
        <hr class="hr-2" />
        <h4 class="text-center">Meal contents</h4>

        <div class="row text-center">
            <div class="col-md-6">
                <p class="col-md-5"> Choose food item:</p>
                <p class="col-md-offset-2 col-md-3"> Amount in grams</p>
            </div>
            <div class="col-md-6">
                <p class="col-md-5"> Choose recipe:</p>
                <p class="col-md-offset-2 col-md-3"> Amount in grams</p>
            </div>
        </div>
        <div class="row form-group text-center">
            <div class="food_item_fields col-md-6">
                <div class="row">
                    <button class="btn btn-sm btn-primary center-block add_food_item_field">Add field</button>
                </div>
                @if (Model != null && Model.FoodItems != null)
                {
                    for (int i = 0; i < Model.FoodItems.Count; i++)
                    {
                        <div class="row">
                            <div class="col-md-5">
                                <select asp-for="FoodItems[i].Name">
                                    @foreach (var foodItem in this.ViewData["FoodItemsNames"] as List<string>)
                                    {
                                        if (Model.FoodItems[i].Name == foodItem)
                                        {
                                            <option value="@foodItem" selected="selected">@foodItem</option>
                                            continue;
                                        }
                                        <option value="@foodItem">@foodItem</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-offset-2 col-md-3">
                                <input asp-for="FoodItems[i].AmountInGrams" type="number" class="form-control" />
                                <span asp-validation-for="FoodItems[i].AmountInGrams" class="text-danger"></span>
                            </div>
                        </div>
                    }
                }
            </div>
            <div class="recipe_fields col-md-6">
                <div class="row">
                    <button class="btn btn-sm btn-primary center-block add_recipe_field">Add field</button>
                </div>
                @if (Model != null && Model.Recipes != null)
                {
                    for (int i = 0; i < Model.Recipes.Count; i++)
                    {
                        <div class="row">
                            <div class="col-md-5">
                                <select asp-for="Recipes[i].Name">
                                    @foreach (var recipe in this.ViewData["RecipesNames"] as List<string>)
                                    {
                                        if (Model.Recipes[i].Name == recipe)
                                        {
                                            <option value="@recipe" selected="selected">@recipe</option>
                                            continue;
                                        }
                                        <option value="@recipe">@recipe</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-offset-2 col-md-3">
                                <input asp-for="Recipes[i].AmountInGrams" type="number" class="form-control" />
                                <span asp-validation-for="Recipes[i].AmountInGrams" class="text-danger"></span>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
        <hr class="hr-2" />
        <div class="text-center form-group col-md-4 col-md-offset-4">
            <button type="submit" class="btn btn-success form-control">Add</button>
        </div>
    </form>
</div>

@section Scripts
    {
    <script type="text/javascript">
        $(document).ready(function() {
            var max_fields_limit = 20; //set limit for maximum input fields
            @{ StringBuilder foodItemSelectList = new StringBuilder();}
            @foreach (var foodItem in this.ViewData["FoodItemsNames"] as List<string>)
            {
                var selectString = "<option value=\"" + foodItem + "\">" + foodItem + "</option>";
                foodItemSelectList.Append(selectString);
            }
            var foodItemSelectValues = '@Html.Raw(foodItemSelectList.ToString())';
            var x = 1 + @(Model == null ? 0 : Model.FoodItems == null ? 0 : Model.FoodItems.Count); //initialize counter for text box
            $('.add_food_item_field').click(function(e){ //click event on add more fields button having class add_more_button
                e.preventDefault();
                if(x < max_fields_limit){ //check conditions
                    x++; //counter increment
                    $('.food_item_fields').append('<hr/><div class="row"><div class="col-md-5"><select name="FoodItems[' + (x - 2).toString() + '].Name">' + foodItemSelectValues + '</select></div><div class="col-md-offset-2 col-md-3"><input name="FoodItems['.trim() + (x - 2).toString() + '].AmountInGrams" type="number" class="form-control"/></div></div>'); //add input field
                }
            });
        });
    </script>

    <script type="text/javascript">
        $(document).ready(function() {
            var max_fields_limit = 20; //set limit for maximum input fields
            @{ StringBuilder recipeSelectList = new StringBuilder();}
            @foreach (var recipe in this.ViewData["RecipesNames"] as List<string>)
            {
                var selectString = "<option value=\"" + recipe + "\">" + recipe + "</option>";
                recipeSelectList.Append(selectString);
            }
            var recipeSelectValues = '@Html.Raw(recipeSelectList.ToString())';
            var x = 1 + @(Model == null ? 0 : Model.Recipes == null ? 0 : Model.Recipes.Count); //initialize counter for text box
            $('.add_recipe_field').click(function(e){ //click event on add more fields button having class add_more_button
                e.preventDefault();
                if(x < max_fields_limit){ //check conditions
                    x++; //counter increment
                    $('.recipe_fields').append('<hr/><div class="row"><div class="col-md-5"><select name="Recipes[' + (x - 2).toString() + '].Name">' + recipeSelectValues + '</select></div><div class="col-md-offset-2 col-md-3"><input name="Recipes['.trim() + (x - 2).toString() + '].AmountInGrams" type="number" class="form-control"/></div></div>'); //add input field
                }
            });
        });
    </script>

    <script type="text/javascript" src="~/js/moment.js"></script>

    <script type="text/javascript" src="~/js/bootstrap-datetimepicker.min.js"></script>

    <script type="text/javascript">
        $(function () {
            $('#timeOfConsumptionPicker').datetimepicker();
        });
    </script>
}
